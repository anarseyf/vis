{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/algorithms/algorithms.component.css","webpack:///./src/app/algorithms/algorithms.component.html","webpack:///./src/app/algorithms/algorithms.component.ts","webpack:///./src/app/algorithms/graph.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\nsvg {\\n    border: 1px solid lightgray;\\n}\\n\\ncircle {\\n    stroke: gray;\\n    stroke-width: 2px;\\n}\"","module.exports = \"\\n<svg id=\\\"svg\\\"\\n    [attr.width]=\\\"width\\\"\\n    [attr.height]=\\\"height\\\">\\n\\n</svg>\\n\"","import {AfterContentInit, Component, OnInit} from '@angular/core';\nimport * as d3 from \"d3\";\nimport { Node, Edge, Graph } from \"./graph\";\n\n@Component({\n    selector: 'app-algorithms',\n    templateUrl: './algorithms.component.html',\n    styleUrls: ['./algorithms.component.css']\n})\n\nexport class AlgorithmsComponent implements OnInit, AfterContentInit {\n\n    graph: Graph;\n    nodeCount: number = 20;\n    width: number = 600;\n    height: number = 400;\n\n    constructor() {\n\n        let nodes = new Array(this.nodeCount)\n            .fill(0)\n            .map((v, i) => {\n                return new Node(this.randomNumber(this.width),\n                                this.randomNumber(this.height),\n                                `Node ${i}`);\n            })\n            .sort((a, b) => a.x - b.x);\n\n        const maxEdges = this.nodeCount * 2;\n        const edgeCount = this.randomNumber(maxEdges);\n        \n        this.graph = new Graph(nodes);\n        this.addRandomEdges(edgeCount);\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterContentInit() {\n        this.drawGraph();\n    }\n\n    randomNumber(max: number) {\n        return Math.round(Math.random() * max);\n    }\n\n    addRandomEdges(remaining: number) {\n\n        let max = this.graph.nodes.size - 1;\n        let i1 = this.randomNumber(max),\n            i2 = this.randomNumber(max);\n        let nodes = Array.from(this.graph.nodes);\n        let edge = new Edge(nodes[i1], nodes[i2]);\n        this.graph.addEdge(edge);\n\n        this.drawGraph();\n\n        if (remaining > 0) {\n            setTimeout(this.addRandomEdges.bind(this, remaining - 1), 100);\n        }\n        else {\n            console.log(this.graph.toString());\n        }\n    }\n\n    drawGraph() {\n        this.drawEdges();\n        this.drawNodes();\n    }\n\n    drawNodes() {\n        let nodes = Array.from(this.graph.nodes);\n        let svg = d3.select(\"#svg\");\n\n        let circles = svg.selectAll(\"circle\")\n            .data(nodes);\n\n        circles.enter()\n            .append(\"circle\")\n            .attr(\"cx\", function (d) {\n                return d.x;\n            })\n            .attr(\"cy\", function (d) {\n                return d.y;\n            })\n            .attr(\"r\", 6)\n            .attr(\"stroke\", \"gray\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"fill\", \"lightgray\");\n\n        circles.exit().remove();\n    }\n\n    drawEdges() {\n        let edges = this.graph.edges;\n        let svg = d3.select(\"#svg\");\n\n        let lines = svg.selectAll(\"line\")\n            .data(edges);\n\n        lines.enter()\n            .append(\"line\")\n            .attr(\"x1\", function (edge: Edge) { return edge.node1.x; })\n            .attr(\"x2\", function (edge: Edge) { return edge.node2.x; })\n            .attr(\"y1\", function (edge: Edge) { return edge.node1.y; })\n            .attr(\"y2\", function (edge: Edge) { return edge.node2.y; })\n            .attr(\"stroke\", \"gray\");\n\n        lines.exit().remove();\n    }\n}\n","export class Node {\n    x: number;\n    y: number;\n    name: string;\n    edges: Edge[];\n    constructor(x: number, y: number, name = \"Node\") {\n        this.x = x;\n        this.y = y;\n        this.name = name;\n        this.edges = [];\n    }\n    addEdge(edge: Edge) {\n        if (edge.node1 == this || edge.node2 == this) {\n            this.edges.push(edge);\n        }\n        else {\n            console.warn(`Cannot add ${edge} to ${this}`);\n        }\n    }\n    hasNeighbor(node: Node) {\n        for (const edge of this.edges) {\n            if (edge.node1 == node || edge.node2 == node) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toString() {\n        return `${this.name} (x:${this.x}, y:${this.y}, neighbors: ${this.edges.length})`;\n    }\n}\n\nexport class Edge {\n    node1: Node;\n    node2: Node;\n\n    constructor(node1: Node, node2: Node) {\n        if (!node1 || !node2) {\n            throw(`Invalid Edge constructor arguments`);\n        }\n        this.node1 = node1;\n        this.node2 = node2;\n    }\n\n    get distance() {\n        const dx2 = Math.pow(this.node1.x - this.node2.x, 2),\n            dy2 = Math.pow(this.node1.y - this.node2.y, 2),\n            distance = Math.sqrt(dx2 + dy2);\n        return Math.round(distance * 100) / 100;\n    }\n\n    toString() {\n        return `Edge (${this.node1.name} - ${this.node2.name}, dist: ${this.distance})`;\n    }\n}\n\nexport class Graph {\n    nodes: Set<Node>;\n    edges: Edge[];\n    name: string;\n\n    constructor(nodes: Node[], edges: Edge[] = [], name = \"Graph\") {\n        this.name = name;\n        this.nodes = new Set(nodes);\n        this.edges = [];\n        edges.forEach(e => this.addEdge(e));\n    }\n\n    addEdge(edge: Edge) {\n        if (!this.nodes.has(edge.node1) || !this.nodes.has(edge.node2)) {\n            throw(`Ignoring unrecognized node: ${edge.toString()}`);\n        }\n        if (!edge.node1 || !edge.node2 || edge.node1 == edge.node2) {\n            console.warn(`Ignoring invalid edge: ${edge.toString()}.`);\n            return;\n        }\n        if (edge.node1.hasNeighbor(edge.node2)) {\n            console.warn(`Ignoring already-existing edge: ${edge}`);\n            return;\n        }\n\n        this.edges.push(edge);\n        edge.node1.addEdge(edge);\n        edge.node2.addEdge(edge);\n\n        console.log(`Added: ${edge.toString()}`)\n    }\n\n    toString() {\n        const nodesStr = Array.from(this.nodes)\n            .map(n => n.toString())\n            .join(\"\\n\\t\");\n        const edgesStr = this.edges\n            .map(e => e.toString())\n            .join(\"\\n\\t\");\n\n        return `Graph:\\n\\t${nodesStr}\\n\\t${edgesStr}`;\n    }\n}","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>{{ title }}</h1>\\n\\n  <nav>\\n    <a routerLink=\\\"/algorithms\\\">Algorithms</a>\\n  </nav>\\n\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'vis';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AlgorithmsComponent } from './algorithms/algorithms.component';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{\n    path: \"algorithms\",\n    component: AlgorithmsComponent\n}];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AlgorithmsComponent\n    ],\n    imports: [\n        BrowserModule,\n        RouterModule.forRoot(routes, {})\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}